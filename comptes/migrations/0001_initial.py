# Generated by Django 5.2.2 on 2025-06-09 18:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_agence', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telephone', models.CharField(max_length=15)),
                ('adresse', models.TextField()),
                ('siret', models.CharField(max_length=14)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='agences/logos/')),
                ('description', models.TextField(blank=True)),
                ('statut', models.CharField(default='Active', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BienImmobilier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_bien', models.CharField(choices=[('Maison', 'Maison'), ('Appartement', 'Appartement'), ('Terrain', 'Terrain')], max_length=20)),
                ('superficie', models.FloatField()),
                ('description', models.TextField(blank=True)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='biens/')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_doc', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profession', models.CharField(blank=True, choices=[('client', 'Client'), ('agent', 'Agent Immobilier'), ('proprietaire', 'Propri√©taire')], max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('agence', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comptes.agence')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appartement',
            fields=[
                ('bienimmobilier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comptes.bienimmobilier')),
                ('etage', models.IntegerField()),
            ],
            bases=('comptes.bienimmobilier',),
        ),
        migrations.CreateModel(
            name='Maison',
            fields=[
                ('bienimmobilier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comptes.bienimmobilier')),
                ('nbr_chambre', models.IntegerField()),
                ('piece_speciale', models.CharField(max_length=255)),
            ],
            bases=('comptes.bienimmobilier',),
        ),
        migrations.CreateModel(
            name='Terrain',
            fields=[
                ('bienimmobilier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comptes.bienimmobilier')),
                ('nbr_parcelles', models.IntegerField()),
            ],
            bases=('comptes.bienimmobilier',),
        ),
        migrations.AddField(
            model_name='bienimmobilier',
            name='proprietaire',
            field=models.ForeignKey(limit_choices_to={'profession': 'proprietaire'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Annonce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('intitule', models.TextField()),
                ('date_publication', models.DateField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='annonces/')),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bien', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptes.bienimmobilier')),
            ],
        ),
        migrations.CreateModel(
            name='Commentaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('date_commentaire', models.DateTimeField(auto_now_add=True)),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptes.annonce')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_paiement', models.DateField()),
                ('montant', models.FloatField()),
                ('bien', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptes.bienimmobilier')),
                ('document', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='comptes.document')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.FloatField()),
                ('date_paiement', models.DateField()),
                ('paiement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptes.paiement')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('bien', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comptes.bienimmobilier')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_transaction', models.CharField(choices=[('location', 'Location'), ('vente', 'Vente')], max_length=20)),
                ('montant', models.FloatField()),
                ('date_transaction', models.DateField()),
                ('acheteur', models.ForeignKey(limit_choices_to={'profession': 'client'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bien', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptes.bienimmobilier')),
            ],
        ),
    ]
